From a42e08581b40bfe0903191aad05123d8143076a9 Mon Sep 17 00:00:00 2001
From: Jarno Rajahalme <jarno@isovalent.com>
Date: Wed, 21 Sep 2022 18:48:03 +0300
Subject: [PATCH 3/6] connection: Make isHalfCloseEnabled const

Signed-off-by: Jarno Rajahalme <jarno@isovalent.com>
---
 envoy/network/connection.h                                | 2 +-
 source/common/network/connection_impl.h                   | 2 +-
 source/common/network/multi_connection_base_impl.cc       | 2 +-
 source/common/network/multi_connection_base_impl.h        | 2 +-
 source/common/quic/quic_filter_manager_connection_impl.cc | 2 +-
 source/common/quic/quic_filter_manager_connection_impl.h  | 2 +-
 source/server/api_listener_impl.h                         | 2 +-
 test/mocks/network/connection.h                           | 2 +-
 8 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/envoy/network/connection.h b/envoy/network/connection.h
index 3cbada199d..1b8a8af456 100644
--- a/envoy/network/connection.h
+++ b/envoy/network/connection.h
@@ -129,7 +129,7 @@ public:
   /**
    * @return true if half-close semantics are enabled, false otherwise.
    */
-  virtual bool isHalfCloseEnabled() PURE;
+  virtual bool isHalfCloseEnabled() const PURE;
 
   /**
    * Close the connection.
diff --git a/source/common/network/connection_impl.h b/source/common/network/connection_impl.h
index 2f41945311..900375162d 100644
--- a/source/common/network/connection_impl.h
+++ b/source/common/network/connection_impl.h
@@ -65,7 +65,7 @@ public:
   // Network::Connection
   void addBytesSentCallback(BytesSentCb cb) override;
   void enableHalfClose(bool enabled) override;
-  bool isHalfCloseEnabled() override { return enable_half_close_; }
+  bool isHalfCloseEnabled() const override { return enable_half_close_; }
   void close(ConnectionCloseType type) final;
   std::string nextProtocol() const override { return transport_socket_->protocol(); }
   void noDelay(bool enable) override;
diff --git a/source/common/network/multi_connection_base_impl.cc b/source/common/network/multi_connection_base_impl.cc
index bebda20b03..407ad3ad32 100644
--- a/source/common/network/multi_connection_base_impl.cc
+++ b/source/common/network/multi_connection_base_impl.cc
@@ -102,7 +102,7 @@ void MultiConnectionBaseImpl::enableHalfClose(bool enabled) {
   }
 }
 
-bool MultiConnectionBaseImpl::isHalfCloseEnabled() { return connections_[0]->isHalfCloseEnabled(); }
+bool MultiConnectionBaseImpl::isHalfCloseEnabled() const { return connections_[0]->isHalfCloseEnabled(); }
 
 std::string MultiConnectionBaseImpl::nextProtocol() const {
   return connections_[0]->nextProtocol();
diff --git a/source/common/network/multi_connection_base_impl.h b/source/common/network/multi_connection_base_impl.h
index 9734df18a6..5b8f8ee5dd 100644
--- a/source/common/network/multi_connection_base_impl.h
+++ b/source/common/network/multi_connection_base_impl.h
@@ -100,7 +100,7 @@ public:
   absl::optional<uint64_t> congestionWindowInBytes() const override;
 
   // Simple getters which always delegate to the first connection in connections_.
-  bool isHalfCloseEnabled() override;
+  bool isHalfCloseEnabled() const override;
   std::string nextProtocol() const override;
   // Note, this might change before connect finishes.
   ConnectionInfoSetter& connectionInfoSetter() override;
diff --git a/source/common/quic/quic_filter_manager_connection_impl.cc b/source/common/quic/quic_filter_manager_connection_impl.cc
index 51e0513cda..cec6e10e58 100644
--- a/source/common/quic/quic_filter_manager_connection_impl.cc
+++ b/source/common/quic/quic_filter_manager_connection_impl.cc
@@ -52,7 +52,7 @@ void QuicFilterManagerConnectionImpl::enableHalfClose(bool enabled) {
   RELEASE_ASSERT(!enabled, "Quic connection doesn't support half close.");
 }
 
-bool QuicFilterManagerConnectionImpl::isHalfCloseEnabled() {
+bool QuicFilterManagerConnectionImpl::isHalfCloseEnabled() const {
   // Quic doesn't support half close.
   return false;
 }
diff --git a/source/common/quic/quic_filter_manager_connection_impl.h b/source/common/quic/quic_filter_manager_connection_impl.h
index a205ed1846..ae7515b4d8 100644
--- a/source/common/quic/quic_filter_manager_connection_impl.h
+++ b/source/common/quic/quic_filter_manager_connection_impl.h
@@ -49,7 +49,7 @@ public:
     IS_ENVOY_BUG("unexpected call to addBytesSentCallback");
   }
   void enableHalfClose(bool enabled) override;
-  bool isHalfCloseEnabled() override;
+  bool isHalfCloseEnabled() const override;
   void close(Network::ConnectionCloseType type) override;
   Event::Dispatcher& dispatcher() override { return dispatcher_; }
   std::string nextProtocol() const override { return EMPTY_STRING; }
diff --git a/source/server/api_listener_impl.h b/source/server/api_listener_impl.h
index 49e6a83071..1c1d774d8c 100644
--- a/source/server/api_listener_impl.h
+++ b/source/server/api_listener_impl.h
@@ -116,7 +116,7 @@ protected:
         IS_ENVOY_BUG("Unexpected function call");
       }
       void enableHalfClose(bool) override { IS_ENVOY_BUG("Unexpected function call"); }
-      bool isHalfCloseEnabled() override {
+      bool isHalfCloseEnabled() const override {
         IS_ENVOY_BUG("Unexpected function call");
         return false;
       }
diff --git a/test/mocks/network/connection.h b/test/mocks/network/connection.h
index d86f6f6775..4ce8a8d175 100644
--- a/test/mocks/network/connection.h
+++ b/test/mocks/network/connection.h
@@ -54,7 +54,7 @@ public:
   MOCK_METHOD(void, addReadFilter, (ReadFilterSharedPtr filter));                                  \
   MOCK_METHOD(void, removeReadFilter, (ReadFilterSharedPtr filter));                               \
   MOCK_METHOD(void, enableHalfClose, (bool enabled));                                              \
-  MOCK_METHOD(bool, isHalfCloseEnabled, ());                                                       \
+  MOCK_METHOD(bool, isHalfCloseEnabled, (), (const));                                              \
   MOCK_METHOD(void, close, (ConnectionCloseType type));                                            \
   MOCK_METHOD(Event::Dispatcher&, dispatcher, ());                                                 \
   MOCK_METHOD(uint64_t, id, (), (const));                                                          \
-- 
2.39.2

