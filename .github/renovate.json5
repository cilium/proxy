{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":gitSignOff",
    "helpers:pinGitHubActionDigests"
  ],
  "includePaths": [
    ".github/workflows/**",
    "Dockerfile",
    "Dockerfile.builder",
    "go.mod",
    "go.sum",
    "WORKSPACE",
    "ENVOY_VERSION"
  ],
  "pinDigests": true,
  "ignorePresets": [":prHourlyLimit2"],
  "separateMajorMinor": false,
  "separateMultipleMajor": false,
  "separateMinorPatch": false,
  "pruneStaleBranches": true,
  "baseBranches": [
    "main",
    "v1.29",
  ],
  "labels": [
    "kind/enhancement",
    "release-note/misc"
  ],
  "schedule": [
    "on monday"
  ],
  postUpdateOptions: [
    "gomodTidy"
  ],
  "packageRules": [
    {
      "groupName": "all go dependencies main",
      "groupSlug": "all-go-deps-main",
      "matchFiles": [
        "go.mod",
        "go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "digest",
        "patch",
        "pin",
        "pinDigest"
      ],
      matchBaseBranches: [
        "main"
      ]
    },
    {
      "groupName": "all go dependencies stable",
      "groupSlug": "all-go-deps-stable",
      "matchFiles": [
        "go.mod",
        "go.sum"
      ],
      "matchUpdateTypes": [
        "minor",
        "digest",
        "patch",
        "pin",
        "pinDigest"
      ],
      matchBaseBranches: [
        "v1.29"
      ]
    },
    {
      "groupName": "all github action dependencies",
      "groupSlug": "all-github-action",
      "matchFileNames": [
        ".github/workflows/**"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "digest",
        "patch",
        "pin",
        "pinDigest"
      ],
    },
    {
      "matchFileNames": [
        "Dockerfile",
      ],
      "matchPackageNames": [
        "docker.io/library/ubuntu"
      ],
      "allowedVersions": "22.04",
      "matchBaseBranches": [
        "main",
        "v1.29",
      ]
    },
    {
      // Do not allow any updates/pinning of image quay.io/cilium/cilium-envoy-builder
      "enabled": false,
      "matchFileNames": [
        "Dockerfile",
      ],
      "matchPackageNames": [
        "quay.io/cilium/cilium-envoy-builder"
      ]
    },
    {
      "matchFileNames": [
        "Dockerfile.builder",
      ],
      "matchPackageNames": [
        "docker.io/library/ubuntu"
      ],
      "allowedVersions": "22.04",
      "matchBaseBranches": [
        "main",
        "v1.29",
      ]
    },
    {
      "matchFileNames": [
        "Dockerfile.builder",
      ],
      "matchPackageNames": [
        "go"
      ],
      "allowedVersions": "<=1.22",
      "matchBaseBranches": [
        "main",
        "v1.29",
      ]
    },
    {
      "groupName": "envoy 1.29.x",
      "matchDepNames": [
        "envoyproxy/envoy"
      ],
      "allowedVersions": "<=1.29",
      "matchBaseBranches": [
        "v1.29"
      ]
    },
    {
      "groupName": "envoy 1.30.x",
      "matchDepNames": [
        "envoyproxy/envoy"
      ],
      "allowedVersions": "<=1.30",
      "matchBaseBranches": [
        "main"
      ]
    },
    {
      "groupName": "go 1.22.x",
      "matchFileNames": [
        ".github/workflows/**",
      ],
      "matchPackageNames": [
        "go"
      ],
      "allowedVersions": "<=1.22",
      "matchBaseBranches": [
        "main",
        "v1.29",
      ]
    },
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "^WORKSPACE$",
      ],
      // These regexes manage version and digest strings in shell scripts,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION = \"(?<currentValue>.*)\"",
        // The digestVersion in this regex is required for Renovate to be able
        // to match the digest to the pinned version. It will not work without it.
        // Note that for GitHub release artifact digests, you likely want to use
        // github-release-attachments as the datasource here.
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?) digestVersion=(?<currentValue>.*)\\s+.+_SHA = \"(?<currentDigest>.*)\""
      ]
    },
    {
      "fileMatch": [
        "^\\.github/workflows/[^/]+\\.ya?ml$"
      ],
      // These regexes manage version strings in env blocks in GH actions,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+-version: (?<currentValue>.*)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+_VERSION: (?<currentValue>.*)",
      ]
    },
    {
      "fileMatch": [
        "^ENVOY_VERSION$"
      ],
      "datasourceTemplate": "github-releases",
      "depNameTemplate": "envoyproxy/envoy",
      "extractVersionTemplate": "^v?(?<version>.+)$",
      "matchStrings": [
        "envoy-(?<currentValue>.*)"
      ]
    },
    {
      "fileMatch": ["^Dockerfile.builder$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\sENV .*?_VERSION=(?<currentValue>.*)\\s"
      ]
    }
  ]
}
