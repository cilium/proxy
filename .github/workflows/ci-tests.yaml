name: CI run integration tests
on:
  pull_request_target:
    types: [opened, synchronize, reopened]

# By specifying the access of one of the scopes, all of those that are not specified are set to 'none'.
permissions:
  # To be able to access the repository with actions/checkout
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

jobs:
  proxylib:
    timeout-minutes: 360
    name: Run unit tests for proxylib
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        # renovate: datasource=golang-version depName=go
        go-version: 1.23.7
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false
    - name: Check module vendoring
      run: |
        go mod tidy
        go mod vendor
        test -z "$(git status --porcelain)" || (echo "please run 'go mod tidy && go mod vendor', and submit your changes"; exit 1)
    - name: Run unit tests
      run: |
        make -C proxylib test

  tests:
    timeout-minutes: 360
    name: Run integration tests on amd64
    runs-on: ubuntu-latest-64-cores-256gb
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to quay.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ENVOY_USERNAME_DEV }}
          password: ${{ secrets.QUAY_ENVOY_PASSWORD_DEV }}

      - name: Cache Docker layers
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: /tmp/buildx-cache
          key: docker-cache-tests
          restore-keys: docker-cache-main

      - name: Checkout PR Source Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Prep for build
        run: |
          echo "${{ github.event.pull_request.head.sha }}" >SOURCE_VERSION
          echo "ENVOY_VERSION=$(cat ENVOY_VERSION)" >> $GITHUB_ENV
          echo "BUILDER_DOCKER_HASH=$(git ls-tree --full-tree HEAD -- ./Dockerfile.builder | awk '{ print $3 }')" >> $GITHUB_ENV

      - name: Checking if cilium-envoy-builder image exists
        id: cilium-builder-tag-in-repositories
        shell: bash
        run: |
          until docker manifest inspect quay.io/${{ github.repository_owner }}/cilium-envoy-builder-dev:test-${{ env.BUILDER_DOCKER_HASH }} &> /dev/null
          do
            echo "Waiting for quay.io/${{ env.QUAY_ORGANIZATION_DEV }}/$image:$SHA image to become available..."
            sleep 45s
          done

      - name: Run integration tests on amd64
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        id: docker_tests_ci
        with:
          provenance: false
          context: .
          file: ./Dockerfile.tests
          platforms: linux/amd64
          build-args: |
            BUILDER_BASE=quay.io/${{ github.repository_owner }}/cilium-envoy-builder-dev:${{ env.BUILDER_DOCKER_HASH }}
            ARCHIVE_IMAGE=quay.io/${{ github.repository_owner }}/cilium-envoy-builder:main-archive-latest
            BAZEL_BUILD_OPTS=--remote_upload_local_results=false
            BAZEL_TEST_OPTS=--test_timeout=300 --local_test_jobs=1 --flaky_test_attempts=3
          cache-from: type=local,src=/tmp/buildx-cache
          push: false
