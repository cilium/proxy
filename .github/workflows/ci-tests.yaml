name: CI run integration tests
on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    timeout-minutes: 360
    name: Run integration tests on amd64
    runs-on: ubuntu-latest-64-cores-256gb
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

    - name: Login to quay.io
      uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_ENVOY_USERNAME_DEV }}
        password: ${{ secrets.QUAY_ENVOY_PASSWORD_DEV }}

    - name: Enable Docker IPv6
      run: |
        modprobe -v ipv6
        sudo sed -i -e '1s!^{!\{ "ipv6": true, "fixed-cidr-v6": "fd00::/80",!' /etc/docker/daemon.json || echo '{ "ipv6": true, "fixed-cidr-v6": "fd00::/80" }' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker

    - name: Cache Docker layers
      uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
      with:
        path: /tmp/buildx-cache
        key: docker-cache-tests-${{ github.base_ref }}
        restore-keys: docker-cache-${{ github.base_ref }}

    - name: Checkout PR Source Code
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Pull proxylib/libcilium.so
      run: |
        docker create -ti --name cilium-proxylib quay.io/cilium/cilium:stable bash
        docker cp -L cilium-proxylib:/usr/lib/libcilium.so proxylib/libcilium.so
        docker rm -fv cilium-proxylib

    - name: Prep for build
      run: |
        echo "${{ github.event.pull_request.head.sha }}" >SOURCE_VERSION
        echo "BAZEL_VERSION=$(cat .bazelversion)" >> $GITHUB_ENV
        echo "BUILDER_DOCKER_HASH=$(git ls-tree --full-tree HEAD -- ./Dockerfile.builder.tests | awk '{ print $3 }')" >> $GITHUB_ENV

    - name: Checking if cilium-envoy-builder image exists
      id: cilium-builder-tests-tag-in-repositories
      shell: bash
      run: |
        if docker buildx imagetools inspect quay.io/${{ github.repository_owner }}/cilium-envoy-builder-dev:test-${{ env.BAZEL_VERSION }}-${{ env.BUILDER_DOCKER_HASH }} &>/dev/null; then
          echo exists="true" >> $GITHUB_OUTPUT
        else
          echo exists="false" >> $GITHUB_OUTPUT
        fi

    - name: PR Multi-arch build & push of Builder image (dev)
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      if: steps.cilium-builder-tests-tag-in-repositories.outputs.exists == 'false'
      id: docker_build_builder_tests_ci
      with:
        provenance: false
        context: .
        file: ./Dockerfile.builder.tests
        platforms: linux/amd64,linux/arm64
        push: true
        tags: quay.io/${{ github.repository_owner }}/cilium-envoy-builder-dev:test-${{ env.BAZEL_VERSION }}-${{ env.BUILDER_DOCKER_HASH }}

    - name: Retrieve Archive image
      id: cilium_archive_tag
      shell: bash
      run: |
        if docker buildx imagetools inspect quay.io/${{ github.repository_owner }}/cilium-envoy-builder:test-${{ github.base_ref }}-archive-latest &>/dev/null; then
          echo archive_image="quay.io/${{ github.repository_owner }}/cilium-envoy-builder:test-${{ github.base_ref }}-archive-latest" >> $GITHUB_OUTPUT
        else
          # Fallback to master archive image
          echo archive_image="quay.io/${{ github.repository_owner }}/cilium-envoy-builder:test-master-archive-latest" >> $GITHUB_OUTPUT
        fi

    - name: Run integration tests on amd64
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      id: docker_tests_ci
      with:
        provenance: false
        context: .
        file: ./Dockerfile.tests
        platforms: linux/amd64
        build-args: |
          BUILDER_BASE=quay.io/${{ github.repository_owner }}/cilium-envoy-builder-dev:test-${{ env.BAZEL_VERSION }}-${{ env.BUILDER_DOCKER_HASH }}
          ARCHIVE_IMAGE=${{ steps.cilium_archive_tag.outputs.archive_image }}
          BAZEL_BUILD_OPTS=--remote_upload_local_results=false
        cache-from: type=local,src=/tmp/buildx-cache
        push: false
