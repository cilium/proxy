name: Cilium Integration Tests
on:
  push:
    branches:
      - main
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

# By specifying the access of one of the scopes, all of those that are not specified are set to 'none'.
permissions:
  # To be able to access the repository with actions/checkout
  contents: read
  # To allow writing PR comments and setting emojis
  pull-requests: write

env:
  # renovate: datasource=github-releases depName=kubernetes-sigs/kind
  KIND_VERSION: v0.28.0
  CILIUM_REPO_OWNER: cilium
  CILIUM_REPO_REF: main
  CILIUM_CLI_REF: latest
  CURL_PARALLEL: ${{ vars.CURL_PARALLEL || 10 }}

jobs:
  cilium-connectivity-tests:
    timeout-minutes: 360
    name: Cilium Connectivity Tests
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Prepare variables for pushes to main
        if: github.event_name == 'push'
        run: |
          echo "PROXY_IMAGE=quay.io/cilium/cilium-envoy" >> $GITHUB_ENV
          echo "PROXY_TAG=${{ github.sha }}" >> $GITHUB_ENV
          echo "PROXY_GITHUB_REPO=github.com/cilium/proxy" >> $GITHUB_ENV

      - name: Prepare variables for PR
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        run: |
          echo "PROXY_IMAGE=quay.io/cilium/cilium-envoy-dev" >> $GITHUB_ENV
          echo "PROXY_TAG=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "PROXY_GITHUB_REPO=github.com/${{github.event.pull_request.head.repo.full_name}}" >> $GITHUB_ENV

      - name: Checkout Cilium ${{ env.CILIUM_REPO_REF }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ env.CILIUM_REPO_OWNER }}/cilium # Be aware that this is the Cilium repository and not the one of the proxy itself!
          ref: ${{ env.CILIUM_REPO_REF }}
          persist-credentials: false

      - name: Extracting Cilium version
        run: |
          echo "CILIUM_IMAGE_TAG=v$(cat ./VERSION)" >> $GITHUB_ENV

      - name: Install Cilium CLI ${{ env.CILIUM_CLI_REF }}
        run: |
          versionPattern="^v[0-9]+\.[0-9]+\.[0-9]+$"
          if [[ ${{ env.CILIUM_CLI_REF }} =~ $versionPattern ]]; then
            curl -sSL --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${{ env.CILIUM_CLI_REF }}/cilium-linux-amd64.tar.gz{,.sha256sum}
            sha256sum --check cilium-linux-amd64.tar.gz.sha256sum
            sudo tar xzvfC cilium-linux-amd64.tar.gz /usr/local/bin
            rm cilium-linux-amd64.tar.gz{,.sha256sum}
          else
            cid=$(docker create quay.io/cilium/cilium-cli-ci:${{ env.CILIUM_CLI_REF }} ls)
            sudo docker cp $cid:/usr/local/bin/cilium /usr/local/bin
            docker rm $cid
          fi
          cilium version

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          version: ${{ env.KIND_VERSION }}
          config: '.github/kind-config.yaml'
          cluster_name: 'kind'

      - name: Patch Cilium Agent Dockerfile
        shell: bash
        run: |
          sed -i -E 's|(ARG CILIUM_ENVOY_IMAGE=)(quay\.io\/cilium\/cilium-envoy:)(.*)(@sha256:[0-9a-z]*)|\1${{ env.PROXY_IMAGE }}:${{ env.PROXY_TAG }}|' ./images/cilium/Dockerfile
          cat ./images/cilium/Dockerfile
          if git diff --exit-code ./images/cilium/Dockerfile; then
            echo "Dockerfile not modified"
            exit 1
          fi

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          # renovate: datasource=golang-version depName=go
          go-version: 1.23.9

      - name: Redirect proxy module
        shell: bash
        if: env.PROXY_GITHUB_REPO != 'github.com/cilium/proxy'
        run: echo "replace github.com/cilium/proxy => ${{ env.PROXY_GITHUB_REPO }} ${{ env.PROXY_TAG }}" >> go.mod

      - name: Update proxy module
        shell: bash
        if: env.PROXY_GITHUB_REPO == 'github.com/cilium/proxy'
        run: go get ${{ env.PROXY_GITHUB_REPO }}@${{ env.PROXY_TAG }}

      - name: Vendor proxy module
        shell: bash
        run: |
          go mod tidy && \
          go mod verify && \
          go mod vendor

      - name: Wait for Cilium Proxy image to be available
        timeout-minutes: 45
        shell: bash
        run: until docker manifest inspect ${{ env.PROXY_IMAGE }}:${{ env.PROXY_TAG }} &> /dev/null; do sleep 15s; done

      - name: Build Cilium Agent & Operator with patched Cilium Proxy Image
        shell: bash
        run: DOCKER_IMAGE_TAG=${{ env.CILIUM_IMAGE_TAG }} make docker-cilium-image docker-operator-generic-image

      - name: Load Cilium Images into kind
        shell: bash
        run: |
          kind load docker-image \
            --name kind \
            quay.io/cilium/operator-generic:${{ env.CILIUM_IMAGE_TAG }} \
            quay.io/cilium/cilium:${{ env.CILIUM_IMAGE_TAG }}

      - name: Install Cilium
        timeout-minutes: 10
        shell: bash
        run: |
          cilium install \
            --chart-directory install/kubernetes/cilium \
            --helm-set bpf.monitorAggregation=none \
            --helm-set loadBalancer.l7.backend=envoy \
            --helm-set=tls.readSecretsOnlyFromSecretsNamespace=true \
            --helm-set=tls.secretSync.enabled=true \
            --helm-set image.repository=quay.io/cilium/cilium \
            --helm-set image.tag=${{ env.CILIUM_IMAGE_TAG }} \
            --helm-set image.useDigest=false \
            --helm-set image.pullPolicy=Never \
            --helm-set operator.image.repository=quay.io/cilium/operator \
            --helm-set operator.image.suffix= \
            --helm-set operator.image.tag=${{ env.CILIUM_IMAGE_TAG }} \
            --helm-set operator.image.useDigest=false \
            --helm-set operator.image.pullPolicy=Never \
            --helm-set envoy.enabled=false \
            --helm-set debug.enabled=true \
            --helm-set debug.verbose=envoy

          cilium hubble enable
          cilium status --wait
          cilium hubble port-forward&

      - name: Execute Cilium L7 Connectivity Tests
        shell: bash
        run: cilium connectivity test --test="l7|sni|tls|ingress|check-log-errors" --curl-parallel=${{ env.CURL_PARALLEL }} --collect-sysdump-on-failure --flush-ct --sysdump-hubble-flows-count=100000 --sysdump-hubble-flows-timeout=15s

      - name: Gather Cilium system dump
        if: failure()
        shell: bash
        run: cilium sysdump --output-filename cilium-sysdump-final


      - name: Upload Cilium system dump
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cilium-integration-test-sysdumps
          path: cilium-sysdump-*.zip
          retention-days: 5
