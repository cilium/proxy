name: Refresh test & build cache & build latest
on:
  push:
    branches:
      - master

jobs:
  test-cache-refresh:
    timeout-minutes: 360
    name: Build test cache and push images
    runs-on: ubuntu-latest-64-cores-256gb
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.4.1

      - name: Enable Docker IPv6
        run: |
          modprobe -v ipv6
          sudo sed -i -e '1s!^{!\{ "ipv6": true, "fixed-cidr-v6": "fd00::/80",!' /etc/docker/daemon.json || echo '{ "ipv6": true, "fixed-cidr-v6": "fd00::/80" }' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker

      - name: Login to quay.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ENVOY_USERNAME }}
          password: ${{ secrets.QUAY_ENVOY_PASSWORD }}

      - name: Checkout PR
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Pull proxylib/libcilium.so
        run: |
          docker create -ti --name cilium-proxylib quay.io/cilium/cilium:stable bash
          docker cp -L cilium-proxylib:/usr/lib/libcilium.so proxylib/libcilium.so
          docker rm -fv cilium-proxylib

      - name: Prep for build
        run: |
          echo "${{ github.event.pull_request.head.sha }}" >SOURCE_VERSION
          echo "ENVOY_VERSION=$(cat ENVOY_VERSION)" >> $GITHUB_ENV

      - name: Multi-arch update integration test archive
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        id: docker_tests_ci_build
        with:
          context: .
          file: ./Dockerfile.tests
          target: builder-archive
          platforms: linux/amd64,linux/arm64
          build-args: |
            COPY_CACHE_EXT=.new
            BAZEL_BUILD_OPTS="--jobs=HOST_CPUS*.75"
          push: true
          tags: quay.io/${{ github.repository_owner }}/cilium-envoy-builder:test-master-archive-latest

      - name: Cache Docker layers
        uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12 # v3.2.3
        with:
          path: /tmp/buildx-cache
          key: docker-cache-tests

      - name: Clear cache
        run: rm -rf /tmp/buildx-cache/*

      - name: Run integration tests on amd64 to update docker cache
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        id: docker_tests_ci_cache_update
        with:
          provenance: false
          context: .
          file: ./Dockerfile.tests
          platforms: linux/amd64
          build-args: |
            BUILDER_IMAGE=quay.io/${{ github.repository_owner }}/cilium-envoy-builder:test-master-archive-latest
            BAZEL_BUILD_OPTS=--remote_upload_local_results=false
          cache-to: type=local,dest=/tmp/buildx-cache,mode=max
          push: true
          tags: quay.io/${{ github.repository_owner }}/cilium-envoy:latest-testlogs

  build-cache-and-push-images:
    timeout-minutes: 360
    name: Build cache and push images
    runs-on: ubuntu-latest-64-cores-256gb
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.4.1

      - name: Login to quay.io
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ENVOY_USERNAME }}
          password: ${{ secrets.QUAY_ENVOY_PASSWORD }}

      - name: Checkout PR
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      - name: Prep for build
        run: |
          echo "${{ github.sha }}" >SOURCE_VERSION
          echo "ENVOY_VERSION=$(cat ENVOY_VERSION)" >> $GITHUB_ENV

      - name: Multi-arch build & push of build artifact archive
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          context: .
          file: ./Dockerfile
          target: builder-archive
          platforms: linux/amd64,linux/arm64
          build-args: |
            COPY_CACHE_EXT=.new
            BAZEL_BUILD_OPTS="--jobs=HOST_CPUS*.75"
          push: true
          tags: quay.io/${{ github.repository_owner }}/cilium-envoy-builder:master-archive-latest

      - name: Cache Docker layers
        uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12 # v3.2.3
        with:
          path: /tmp/buildx-cache
          key: docker-cache-master

      - name: Clear cache
        run: |
          rm -rf /tmp/buildx-cache/*
          docker buildx prune -f

      - name: Multi-arch build & push master latest
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        id: docker_build_cd
        with:
          provenance: false
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            BAZEL_BUILD_OPTS=--remote_upload_local_results=false
            BUILDER_IMAGE=quay.io/${{ github.repository_owner }}/cilium-envoy-builder:master-archive-latest
          cache-to: type=local,dest=/tmp/buildx-cache,mode=max
          push: true
          tags: |
            quay.io/${{ github.repository_owner }}/cilium-envoy:latest
            quay.io/${{ github.repository_owner }}/cilium-envoy:${{ github.sha }}

      - name: Envoy binary version check
        shell: bash
        run: |
          docker create -ti --name cilium-envoy quay.io/${{ github.repository_owner }}/cilium-envoy:${{ github.sha }} bash
          docker cp cilium-envoy:/usr/bin/cilium-envoy ./cilium-envoy
          docker rm -fv cilium-envoy
          envoy_version=$(./cilium-envoy --version)
          echo ${envoy_version}
          [[ "${envoy_version}" == *"${{ github.sha }}"* ]]

      - name: Release Image Digest
        shell: bash
        run: |
          echo "Digests:"
          echo "quay.io/${{ github.repository_owner }}/cilium-envoy:${{ github.sha }}@${{ steps.docker_build_cd.outputs.digest }}"
